# general settings
name: DUF_52L_Vimeo90K_BIx4
model_type: VideoBaseModel
scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: Vimeo90K
    type: Vimeo90KDataset
    dataroot_gt: datasets/vimeo90k/vimeo_septuplet/sequences
    dataroot_lq: datasets/vimeo90k/vimeo_septuplet_matlabLRx4/sequences
    meta_info_file: lbasicsr/data/meta_info/meta_info_Vimeo90K_train_GT.txt
    io_backend:
      type: disk

    num_frame: 7
    gt_size: 128    # 32 x 4 = 128
    interval_list: [1]
    random_reverse: false
    use_hflip: true
    use_rot: true
    flip_sequence: false

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 16
    dataset_enlarge_ratio: 1
    prefetch_mode: cuda
    pin_memory: True


  val:
    name: Vid4
    type: VideoTestDataset
    dataroot_gt: datasets/Vid4/GT
    dataroot_lq: datasets/Vid4/BIx4
    io_backend:
      type: disk

    cache_data: false
    num_frame: 7
    padding: reflection_circle

# network structures
network_g:
  type: DUF
  scale: 4
  num_layer: 52
  adapt_official_weights: true

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: experiments/DUF_52L_Vimeo90K_BIx4/training_states/4000.state

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 1e-3
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    # ============================================
#    type: CosineAnnealingRestartLR
#    periods: [ 50000, 50000, 50000, 50000 ]
#    restart_weights: [ 1, 0.5, 0.5, 0.5 ]
#    eta_min: !!float 1e-7
    # ============================================
    type: MultiStepLR
    milestones: [ 50000, 100000, 150000, 200000 ]
    gamma: 0.1
    # ============================================

  total_iter: 200000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e3
  save_img: false

  metrics:
    psnr_y: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true
    ssim_y:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: true

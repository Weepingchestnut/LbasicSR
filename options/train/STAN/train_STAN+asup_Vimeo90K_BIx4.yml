# general settings
name: STAN+asup_Vimeo90K_BIx4_adj-lr
model_type: STANModel
scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: Vimeo90K
    type: ASVimeo90KRecurrentDataset
    dataroot_gt: /data2/lzk_data/workspace/LbasicSR/datasets/vimeo90k/vimeo_septuplet/sequences
    dataroot_lq: /data2/lzk_data/workspace/LbasicSR/datasets/vimeo90k/vimeo_septuplet/sequences_LR/sequencestrain
    meta_info_file: /data2/lzk_data/workspace/LbasicSR/lbasicsr/data/meta_info/meta_info_Vimeo90K_train_GT.txt
    io_backend:
      type: disk

#    use_all_gt: true
    num_frame: 7
    lq_size: 50
    downsample_mode: torch    # [torch, core, numpy]
    gt_size: 128
    interval_list: [1]
    random_reverse: false
    use_hflip: true
    use_rot: true
    flip_sequence: false

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 1
    prefetch_mode: ~    # cuda
#    pin_memory: true

  val:
    name: Vid4
    type: VideoTestDataset
    dataroot_gt: /data2/lzk_data/workspace/LbasicSR/datasets/Vid4/GT
    dataroot_lq: /data2/lzk_data/workspace/LbasicSR/datasets/Vid4/BIx4
    io_backend:
      type: disk

    cache_data: false
    num_frame: 7
    padding: reflection

# network structures
network_g:
  type: STAN
  num_in_ch: 3
  num_feat: 64
  num_frame: 7
  n_resgroups: 10
  n_resblocks: 20
  reduction: 16
  center_frame_idx: ~
  scale: 4
  res_scale: 1

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~   # /data2/lzk_data/workspace/LbasicSR/experiments/STAN+asup_Vimeo90K_BIx4/training_states/9000.state   # /data2/lzk_data/workspace/LbasicSR/experiments/STAN_Vimeo90K_BIx4/training_states/150000.state
  new_train_setting: true

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [ 0.9, 0.999 ]

  scheduler:
    # =============================================
#    type: CosineAnnealingRestartLR
#    periods: [ 150000, 150000, 150000, 150000 ]
#    restart_weights: [ 1, 0.5, 0.5, 0.5 ]
#    eta_min: !!float 1e-7
    # =============================================
    type: MultiStepLR
    milestones: [50000, 100000, 150000, 200000]
    gamma: 0.1
#    restarts: [150000, 150000, 150000, 150000]
#    restart_weights: [ 1, 0.1, 0.1, 0.1 ]
#  ==============================================
#    restart test
#    restarts: [16, 32]
#    restart_weights: [ 1, 0.1 ]
#  ==============================================
#    eta_min: !!float 1e-7

  total_iter: 200000    #600000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e3
  save_img: false

  metrics:
    psnr_y: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true
    ssim_y:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

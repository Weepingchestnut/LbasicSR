# general settings
name: 02_STAN+tada+asup_Vimeo90K_BIx[4_1.2-3.8]
model_type: STANModel
scale: !!python/tuple [4, 4]
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: Vimeo90K
    type: ASVimeo90KRecurrentDataset
    dataroot_gt: datasets/vimeo90k/vimoe_septuplet_origin/vimeo_septuplet/sequences
    dataroot_lq: datasets/vimeo90k/vimeo_septuplet_matlabLRx4/sequences
    meta_info_file: lbasicsr/data/meta_info/meta_info_Vimeo90K_train_GT.txt
    io_backend:
      type: disk

#    use_all_gt: true
    num_frame: 7
    # ================================================
    lq_size: 50
    downsample_mode: torch    # [torch, core, numpy]
    init_int_scale: false
    single_scale_ft: false    # only a scale
    # ================================================
    gt_size: 128
    interval_list: [1]
    random_reverse: false
    use_hflip: true
    use_rot: true
    flip_sequence: false

    # data loader
    num_worker_per_gpu: 6
    batch_size_per_gpu: 4
    dataset_enlarge_ratio: 200
    prefetch_mode: ~    # cuda
#    pin_memory: true

  val:
    name: Vid4
    type: ASVideoTestDataset
    dataroot_gt: datasets/Vid4/GT
    dataroot_lq: datasets/Vid4/BIx4
    io_backend:
      type: disk

    cache_data: false
    num_frame: 7
    padding: reflection
    # ========================================
    use_arbitrary_scale_downsampling: true
    downsampling_scale: !!python/tuple [4, 4]
    downsampling_mode: torch
    # ========================================

# network structures
network_g:
  type: STAN
  num_in_ch: 3
  num_feat: 64
  num_frame: 7
  n_resgroups: 5
  n_resblocks: 10
  reduction: 16
  center_frame_idx: ~
#  scale: 4
  res_scale: 1

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~
  new_train_setting: true

# training settings
train:
#  ema_decay: 0.9
  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [ 0.9, 0.999 ]

  scheduler:
    # =============================================
#    type: CosineAnnealingRestartLR
#    periods: [ 50000, 50000, 50000, 50000 ]
#    restart_weights: [ 1, 0.5, 0.5, 0.5 ]
#    eta_min: !!float 1e-7
    # =============================================
    type: MultiStepLR
#    milestones: [50000, 100000, 150000, 200000]
    milestones: [100000]
    gamma: 0.1
#    restarts: [150000, 150000, 150000, 150000]
#    restart_weights: [ 1, 0.1, 0.1, 0.1 ]
#  ==============================================
#    restart test
#    restarts: [16, 32]
#    restart_weights: [ 1, 0.1 ]
#  ==============================================
#    eta_min: !!float 1e-7

  total_iter: 100000    #600000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 1e3
  save_img: false

  metrics:
    psnr_y: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true
    ssim_y:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

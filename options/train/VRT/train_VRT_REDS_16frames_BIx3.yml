# general settings
name: VRT_REDS_16frames_BIx3
model_type: VRTModel
scale: !!python/tuple [3, 3]
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: REDS
    type: ASREDSRecurrentDataset
    # dataroot_gt: datasets/REDS/train_sharp
    # dataroot_lq: datasets/REDS/train_sharp_bicubic/X4
    dataroot_gt: datasets/REDS/train_sharp_with_val.lmdb
    dataroot_lq: datasets/REDS/train_sharp_bicubic_with_val.lmdb
    meta_info_file: lbasicsr/data/meta_info/meta_info_REDS_GT.txt
    val_partition: REDS4  # set to 'official' when use the official validation partition
    test_mode: False
    io_backend:
      # type: disk
      type: lmdb

    num_frame: 6
    # arbitrary scale dataset --------------------------
    lq_size: 64
    downsample_mode: torch              # [torch, core, numpy]
    single_scale_ft: true               # only a x2 scale
    # --------------------------------------------------
    gt_size: 256                        # if ASREDSRecurrentDataset, not needed
    interval_list: [1]
    random_reverse: false
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 8         # 6
    batch_size_per_gpu: 4         # for 2 A6000: 1, default: 8
    dataset_enlarge_ratio: 200
    prefetch_mode: ~

  val:
    name: REDS4_x3
    type: ASVideoRecurrentTestDataset
    dataroot_gt: datasets/REDS4/GT
    dataroot_lq: datasets/REDS4/sharp_bicubic

    cache_data: True
    io_backend:
      type: disk

    num_frame: -1  # not needed
    # arbitrary scale dataset --------------------------
    use_arbitrary_scale_downsampling: true
    downsampling_scale: !!python/tuple [3, 3]
    downsampling_mode: torch
    # --------------------------------------------------

# network structures
network_g:
  type: VRT
  upscale: 3
  img_size: [16, 64, 64]
  window_size: [8, 8, 8]
  depths: [8,8,8,8,8,8,8, 4,4,4,4, 4,4]
  indep_reconsts: [11, 12]
  embed_dims: [120,120,120,120,120,120,120, 180,180,180,180, 180,180]
  num_heads: [6,6,6,6,6,6,6, 6,6,6,6, 6,6]
  spynet_path: experiments/pretrained_models/flownet/spynet_sintel_final-3d2a1287.pth
  pa_frames: 4
  deformable_groups: 16
  nonblind_denoising: false
  use_checkpoint_attn: true
  use_checkpoint_ffn: false
  no_checkpoint_attn_blocks: [0,1,2,3,4,5]
  no_checkpoint_ffn_blocks: []

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: experiments/VRT_REDS_16frames_BIx3/training_states/140000.state

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 4e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [300000]
    restart_weights: [1]
    eta_min: !!float 1e-7

  total_iter: 300000
  warmup_iter: -1  # no warm up

  fix_iter: 20000
  flow_lr_mul: 0.125
  fix_keys: ['spynet', 'deform']

  # losses
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean
    eps: !!float 1e-9

# validation settings
val:
  val_freq: !!float 5e3
  save_img: false

  num_frame_testing: 40
  num_frame_overlapping: 2
  size_patch_testing: 128

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

find_unused_parameters: false
use_static_graph: true

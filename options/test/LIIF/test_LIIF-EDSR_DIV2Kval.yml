name: liif-edsr-norm_c64b16_1xb16-1000k_div2k_DIV2Kval
model_type: LIIFModel
# scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  # test_1:
  #   name: DIV2K100_x2
  #   type: ASINRImageDataset
  #   dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
  #   # filename_tmpl: '{}x4'
  #   io_backend:
  #     type: disk
  #   reshape_gt: false
  #   val_scale: !!python/tuple [2, 2]

  test_2:
    name: DIV2K100_x3
    type: ASINRImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
    # filename_tmpl: '{}x4'
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [3, 3]

  test_3:
    name: DIV2K100_x4
    type: ASINRImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
    # filename_tmpl: '{}x4'
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [4, 4]
  
  test_4:
    name: DIV2K100_x6
    type: ASINRImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
    # filename_tmpl: '{}x6'
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [6, 6]
  
  test_5:
    name: DIV2K100_x12
    type: ASINRImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
    # filename_tmpl: '{}x6'
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [12, 12]
  
  test_6:
    name: DIV2K100_x18
    type: ASINRImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
    # filename_tmpl: '{}x6'
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [18, 18]
  
  test_7:
    name: DIV2K100_x24
    type: ASINRImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
    # filename_tmpl: '{}x6'
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [24, 24]
  
  test_8:
    name: DIV2K100_x30
    type: ASINRImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
    # filename_tmpl: '{}x6'
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [30, 30]

# network structures
network_g:
  type: LIIFEDSR
  encoder:
    type: EDSR
    num_in_ch: 3
    num_out_ch: 3
    num_feat: 64
    num_block: 16
  imnet:
    type: MLPRefiner
    in_dim: 64
    out_dim: 3
    hidden_list: [256, 256, 256, 256]
  local_ensemble: true
  feat_unfold: true
  cell_decode: true
  eval_bsize: 30000

# path
path:
  pretrain_network_g: experiments/liif-edsr-norm_c64b16_1xb16-1000k_div2k/models/net_g_975000.pth
  strict_load_g: true

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 4
      test_y_channel: false

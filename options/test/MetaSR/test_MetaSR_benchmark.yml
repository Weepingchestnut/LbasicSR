name: MetaSR-RDN_official_benchmark
model_type: MetaSRModel
# scale: 4
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  test_1:  # the 1st test dataset
    name: Set5
    type: ASINRImageDataset
    dataroot_gt: datasets/Set5/GTmod12
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [3, 3]
  
  test_2:  # the 2nd test dataset
    name: Set14
    type: ASINRImageDataset
    dataroot_gt: datasets/Set14/GTmod12
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [4, 4]
  
  test_3:
    name: B100
    type: ASINRImageDataset
    dataroot_gt: datasets/B100/GT
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [4, 4]
  
  test_4:
    name: Urban100
    type: ASINRImageDataset
    dataroot_gt: datasets/Urban100/GT
    io_backend:
      type: disk
    reshape_gt: false
    val_scale: !!python/tuple [4, 4]

# network structures
network_g:
  type: MetaRDN
  rgb_range: 255
  n_colors: 3
  G0: 64
  RDNkSize: 3
  RDNconfig: B

# path
path:
  pretrain_network_g: experiments/pretrained_models/MetaSR/model_1000.pt
  param_key_g: ~   # params_ema
  strict_load_g: true

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr_y: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true
    ssim_y:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true
